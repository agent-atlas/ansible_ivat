  # - name: Create net config for ens4
  #   ansible.builtin.copy:
  #     src: nets2_{{ inventory_hostname }}
  #     dest: /etc/network/interfaces.d/ens4.cfg
  #     owner: root
  #     group: root
  #     mode: '0644'
  #   register: enp4s2_config

  # - name: Restart enp4s2
  #   command:
  #     /bin/bash -c "/usr/sbin/ifdown ens4 && /usr/sbin/ifup ens4"
  #   when: enp4s2_config.changed
  - name: Run the equivalent of "apt-get update"
    ansible.builtin.apt:
      update_cache: yes

  - name: Install and update common debs...
    ansible.builtin.apt:
      pkg:
        - gnupg2
        - apt-transport-https
        - ca-certificates
        - nfs-common
        - openssl
        - snmpd
        - aptitude
        - mc
        - htop
        - tcpdump
        - net-tools
        - iptables
        - ntp
        - ntpdate
        - sudo
        - iotop
        - rsyslog
        - curl
        - wget
        - rsync
        - uuid
        - xfsprogs
        - bridge-utils
        - parted
        - psmisc
      default_release: bullseye
      state: latest

  - name: Update all packages to their latest version
    ansible.builtin.apt:
      name: "*"
      default_release: bullseye
      state: latest

  - name: Create group postgres
    ansible.builtin.group:
      name: postgres
      gid: 126
      state: present

  - name: Create user postgres
    ansible.builtin.user:
      name: postgres
      uid: 126
      group: postgres
      shell: /bin/bash
      state: present
      home: /data/patroni

  - name: Create mount point /data/patroni
    file:
      path: /data/patroni
      owner: postgres
      group: postgres
      state: directory
      mode: '0750'

  # - name: Create volume patroni
  #   community.general.lvg:
  #     pvs: /dev/vdb
  #     vg: psql
  #     pvresize: yes

  # - name: Create logic lv-psql
  #   community.general.lvol:
  #     vg: psql
  #     lv: lv-psql
  #     size: 100%VG
  #     state: present

  # - name: Create ext4 /dev/psql/lv-psql
  #   community.general.filesystem:
  #     fstype: ext4
  #     dev: /dev/psql/lv-psql
  #     opts: -T news
  #     state: present

  # - name: mount /dev/psql/lv-psql
  #   ansible.posix.mount:
  #     src: /dev/psql/lv-psql
  #     path: /data/patroni
  #     fstype: ext4
  #     opts: defaults,noatime
  #     state: mounted

  # - name: Correct owners and rights /data/patroni
  #   file:
  #     path: /data/patroni
  #     owner: postgres
  #     group: postgres
  #     state: directory
  #     mode: '0750'

  - name: Create work dir /data/patroni/patroni
    file:
      path: /data/patroni/patroni
      owner: postgres
      group: postgres
      state: directory
      mode: '0750'

  - name: Add Postgresql apt key
    ansible.builtin.apt_key:
      file: /shared/ansible/roles/psql/files/ACCC4CF8.asc
      keyring: /etc/apt/trusted.gpg.d/postgresql.gpg
      state: present

  - name: Add timescale apt key
    ansible.builtin.apt_key:
      file: /shared/ansible/roles/psql/files/timescale_gpgkey
      keyring: /etc/apt/trusted.gpg.d/timescale.gpg
      state: present

  - name: Add Postgresql apt source list
    ansible.builtin.apt_repository:
      repo: deb http://apt.postgresql.org/pub/repos/apt bullseye-pgdg main
      state: present
      filename: postgresql

  - name: Add timescaleDB apt source list
    ansible.builtin.apt_repository:
      repo: deb http://packagecloud.io/timescale/timescaledb/debian/ bullseye main
      state: present
      filename: timescaledb

  - name: Run "apt-get update"
    ansible.builtin.apt:
      update_cache: yes

  - name: Install and update psql debs...
    ansible.builtin.apt:
      pkg:
        - postgresql-15
        - postgresql-15-jsquery
        - postgresql-15-powa
        - etcd-server
        - etcd-client
        - python3-cdiff
        - python3-click
        - python3-dateutil
        - python3-etcd
        - python3-pkg-resources
        - python3-prettytable
        - python3-psutil
        - python3-psycopg2
        - python3-urllib3
        - python3-yaml
        - keepalived
        - patroni
        - haproxy
        - timescaledb-2-loader-postgresql-15
        - timescaledb-tools
        - timescaledb-2-postgresql-15
      default_release: bullseye
      state: latest
      update_cache: yes
      force_apt_get: yes
      install_recommends: yes
      dpkg_options: "force-confdef,force-confold"

  - name: Run the equivalent of "apt-get clean" as a separate step
    ansible.builtin.apt:
      clean: yes

  - name: disable and stop postgresql
    ansible.builtin.systemd:
      name: postgresql
      enabled: false
      state: stopped

  - name: Create etcd config
    ansible.builtin.copy:
      src:  etcd_{{ inventory_hostname }}
      dest: /etc/default/etcd
      owner: root
      group: root
      mode: '0644'
    register: etcd_stat

  - name: stop etcd
    ansible.builtin.systemd:
      name: etcd
      state: stopped
    when: etcd_stat.changed

  - name: remove old etcd data
    ansible.builtin.file:
      path: "/var/lib/etcd/default"
      state: absent
    when: etcd_stat.changed

  - name: start etcd
    ansible.builtin.systemd:
      name: etcd
      enabled: true
      state: started

  - name: psql files sync...
    ansible.posix.synchronize:
      src:  psql/
      dest: /

  - name: psql PEM files sync...
    ansible.posix.synchronize:
      src:  pem/
      dest: /etc/ssl/

  - name: Create dir /data/patroni/wal_archive
    file:
      path: /data/patroni/wal_archive
      owner: postgres
      group: postgres
      state: directory
      mode: '0755'

  - name: correct access mode for keys
    file:
      path: /etc/ssl/psql.smartcity.key
      owner: postgres
      group: root
      mode: '0600'

  - name: Create patroni config
    ansible.builtin.copy:
      src:  config.yml_{{ inventory_hostname }}
      dest: /etc/patroni/config.yml
      owner: root
      group: root
      mode: '0644'
    register: pat_conf

  - name: Copy haproxy.cfg
    ansible.builtin.copy:
      src:  haproxy.cfg
      dest: /etc/haproxy/haproxy.cfg
      owner: root
      group: root
      mode: '0644'
    register: haproxy_cfg

  - name: Create keepalived config
    ansible.builtin.copy:
      src:  keepalived.conf_{{ inventory_hostname }}
      dest: /etc/keepalived/keepalived.conf
      owner: root
      group: root
      mode: '0644'
    register: keepalived_cfg

  - name: Reload systemd configs
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: start patroni service
    ansible.builtin.systemd:
      name: patroni
      enabled: yes
      state: restarted
    when: pat_conf.changed

  - name: start haproxy service
    ansible.builtin.systemd:
      name: haproxy
      enabled: yes
      state: restarted
    when: haproxy_cfg.changed

  - name: start keepalived service
    ansible.builtin.systemd:
      name: keepalived
      enabled: yes
      state: restarted
    when: keepalived_cfg.changed

  - name: Create postgre_exporter config
    ansible.builtin.copy:
      src:  postgre_exporter.env_{{ inventory_hostname }}
      dest: /etc/postgre_exporter.env
      owner: root
      group: root
      mode: '0644'

  - name: start postexporter service
    ansible.builtin.systemd:
      name: postexporter
      enabled: yes
      state: started
